apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector
          ports:
            - containerPort: 4317  # gRPC OTLP
            - containerPort: 8889  # Prometheus
          volumeMounts:
            - name: otel-config
              mountPath: /etc/otelcol
            - name: otel-storage
              mountPath: /tmp/otel
      volumes:
        - name: otel-config
          configMap:
            name: otel-config
        - name: otel-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector-svc
spec:
  type: ClusterIP
  selector:
    app: otel-collector
  ports:
    - name: grpc-otlp
      port: 4317
      targetPort: 4317
    - name: prometheus-scrape
      port: 8889
      targetPort: 8889
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-config
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 10s
            static_configs:
            - targets: ['0.0.0.0:8889']
    
    exporters:
      debug:
        verbosity: detailed
      otlp:
        endpoint: tempo-svc:4317
        tls:
          insecure: true
      otlphttp/loki:
        endpoint: http://loki-svc:3100/otlp   # <- Loki OTLP logs endpoint
        tls:
          insecure: true
      prometheus:
        endpoint: 0.0.0.0:8889
    
    processors:
      batch: {}
    
    service:
      telemetry:
        logs:
          level: "debug"
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [debug, otlp]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlphttp/loki]
        metrics:
          receivers: [otlp]
          processors: [batch]
          exporters: [prometheus]  # <- expón métricas en formato Prometheus
